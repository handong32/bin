#!/bin/bash
max=0
avg=0
n=0

#### Gotten from http://www.linuxjournal.com/content/floating-point-math-bash
float_scale=4

#####################################################################
# Evaluate a floating point number expression.

function float_eval()
{
    local stat=0
    local result=0.0
    if [[ $# -gt 0 ]]; then
        result=$(echo "scale=$float_scale; $*" | bc -q 2>/dev/null)
        stat=$?
        if [[ $stat -eq 0  &&  -z "$result" ]]; then stat=1; fi
    fi
    echo $result
    return $stat
}


#####################################################################
# Evaluate a floating point number conditional expression.

function float_cond()
{
    local cond=0
    if [[ $# -gt 0 ]]; then
        cond=$(echo "$*" | bc -q 2>/dev/null)
        if [[ -z "$cond" ]]; then cond=0; fi
        if [[ "$cond" != 0  &&  "$cond" != 1 ]]; then cond=0; fi
    fi
    local stat=$((cond == 0))
    return $stat
}
######


while read val
do
  ((n++))
  if ((n==1))
  then
    min=$val
  else
    if float_cond "$val < $min"
    then
       min=$val
    fi
  fi
    
  if float_cond "$val > $max"
  then
    max=$val
  fi
  avg=$(float_eval "$avg + $val")
  [[ -n $VERBOSE ]] && echo "$n : $val min=$min max=$max avg=$avg"
done
 
avg=$(float_eval "$avg / $n")
echo "$avg $min $max"
 
