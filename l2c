#!/bin/bash
# rows of multiple tails to columns
# every time a new value is read from any of the monoitored files a single row of space separated output will be generated
# where the row is composed of the last line of each file.
# to control the order you can provide a comma seperated list of the file names
# additionally you can provide a regular expression to extract a specific value from each line of the files
# Eg
#
# $ RE='.*numRecordsOutPerSecond....value....([[:digit:].]*).*'
# $ tail -n 1 -f ~/tmp/Flinklogs/Operator_Source\:\ Bids\ Source_{0..3} | ./l2c 'Operator_Source: Bids Source_0,Operator_Source: Bids Source_1,Operator_Source: Bids Source_2,Operator_Source: Bids Source_3' "$RE"
#26357.75 26390.133333333335 26358.283333333333 26364.066666666666 

#set -x
declare -a keys
k="$1"
declare -i i=0
# load key array from comma seperated first argument
while [[ -n $k ]]; do
    keys[$i]="${k%%,*}"
    k="${k#*,}"
    [[ "${keys[$i]}" == "$k" ]] && k="" 
    ((i++))
done
keys=( ${keys[@]// /} )
#echo ${#keys[@]} ${keys[@]}
VALREGEX="$2"
VALIDX=${3:-1}
set -u

#HEADERREGEX=${L2C_HEADERREGEX:-"^(==> )(.*)( <==)"}
HEADERREGEX=${L2C_HEADERREGEX:-"^==> (.*)( <==)"}
declare -A columns
declare -i numkeys=${#keys[@]}
while read line; do
    #echo $line
    [[ -z $line ]] && continue
    if [[ $line =~ ${HEADERREGEX} ]]; then
	c="${BASH_REMATCH[1]}"
	c="${c##*/}"
	c="${c// /}"
	#echo "column: $c -> ${!columns[@]}"
    else
	if [[ -n $VALREGEX ]]; then
	    if [[ $line =~ ${VALREGEX} ]]; then
		columns["$c"]=${BASH_REMATCH[$VALIDX]}
	    fi
	else
	    columns["$c"]=${line}
	fi
	#echo "- $c: $line : ${columns[$c]}"
	if (( $numkeys > 0 )); then
	    if (( ${#columns[@]} >= $numkeys )); then
		out=""
		for k in ${keys[@]}; do
		    [[ -v columns["$k"] ]] && {
			#echo "$k" in "${!columns[@]}"
			printf "%s " ${columns["$k"]} 
			out=1
		    }
		done
		[[ -n $out ]] &&  printf "\n"
	    fi
	else
	    echo ${columns[@]}
	fi
    fi
done


